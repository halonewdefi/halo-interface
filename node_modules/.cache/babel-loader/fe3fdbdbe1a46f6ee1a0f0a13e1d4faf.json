{"ast":null,"code":"var _jsxFileName = \"/home/augustin/literate-octo-guide/src/components/TokenSelector/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport defaults from '../../common/defaults';\nimport { Button, Box, Image, Modal, ModalHeader, ModalCloseButton, ModalOverlay, ModalContent, ModalBody, ModalFooter, Input, Switch, Flex, useToast } from '@chakra-ui/react';\nimport { useLocalStorage } from 'react-use';\nimport { FixedSizeList as List } from 'react-window';\nimport { EditIcon, ArrowBackIcon } from '@chakra-ui/icons';\nimport { getCombinedTokenListFromSources, searchFor } from '../../common/utils';\nimport { tokenNotAvailableToselect } from '../../messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenSelectButton = _ref => {\n  _s();\n\n  let {\n    data,\n    index,\n    style\n  } = _ref;\n  TokenSelectButton.propTypes = {\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired,\n    data: PropTypes.any.isRequired\n  };\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"ghostSelectable\",\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    justifyContent: \"left\",\n    flexWrap: \"wrap\",\n    alignContent: \"center\",\n    p: \"2rem 1.5rem\",\n    style: data.tokenList[index].disabled ? { ...style,\n      opacity: '0.4',\n      cursor: 'not-allowed',\n      boxShadow: 'none'\n    } : style,\n    onClick: () => {\n      if (data.tokenList) {\n        if (!data.tokenList[index].disabled) {\n          if (data.isSelect === 0) data.setToken0(data.tokenList[index]);\n          if (data.isSelect === 1) data.setToken1(data.tokenList[index]);\n        } else {\n          toast(tokenNotAvailableToselect);\n        }\n      }\n\n      data.onClose();\n    },\n    children: data.tokenList && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        display: \"inline-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          width: \"24px\",\n          height: \"24px\",\n          borderRadius: \"50%\",\n          background: \"white\",\n          mr: \"10px\",\n          src: data.tokenList[index].logoURI,\n          alt: `${data.tokenList[index].name} token`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), data.tokenList[index].symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        paddingLeft: \"34px\",\n        fontSize: \"1rem\",\n        fontWeight: \"100\",\n        color: \"#666\",\n        children: data.tokenList[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TokenSelectButton, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c = TokenSelectButton;\n\nconst TokenSelectDialog = props => {\n  _s2();\n\n  TokenSelectDialog.propTypes = {\n    tokenList: PropTypes.any.isRequired,\n    isSelect: PropTypes.number.isRequired,\n    setToken0: PropTypes.func.isRequired,\n    setToken1: PropTypes.func,\n    onClose: PropTypes.func.isRequired\n  };\n  const [tokenListModified, setTokenListModified] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n      top: \"1.29rem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      display: \"flex\",\n      flexDir: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        p: \"0 1.5rem 1.5rem\",\n        borderBottom: \"1px solid #00000017\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          size: \"lg\",\n          placeholder: \"Search name or paste address\",\n          variant: \"blank\",\n          onChange: e => {\n            const result = searchFor(props.tokenList, e.target.value);\n            if (result && result.length !== 0) setTokenListModified(result); // if (result.length === 0 &&\n            // \t\t\tisEthereumAddress(e.target.value)\n            // ) console.log(resolveUnknownERC20(e.target.value, defaults.network.provider))\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), props.tokenList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          width: \"100%\",\n          maxWidth: 454.883,\n          height: 600,\n          itemCount: tokenListModified ? tokenListModified.length : props.tokenList.length,\n          itemSize: 64,\n          style: {\n            scrollbarColor: 'rgb(134, 134, 134) transparent'\n          },\n          itemData: {\n            tokenList: tokenListModified ? tokenListModified : props.tokenList,\n            isSelect: props.isSelect,\n            setToken0: props.setToken0,\n            setToken1: props.setToken1,\n            onClose: props.onClose\n          },\n          children: TokenSelectButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TokenSelectDialog, \"7kdiOGzonajI7i0YggM5KsTSunE=\");\n\n_c2 = TokenSelectDialog;\n\nconst TokenListSelectDialog = props => {\n  TokenListSelectDialog.propTypes = {\n    tokenListSources: PropTypes.array.isRequired,\n    setTokenListSources: PropTypes.func.isRequired,\n    setDialog: PropTypes.func.isRequired\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      textAlign: \"center\",\n      borderBottom: \"1px solid #00000017\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"ghostDark\",\n        minW: \"auto\",\n        width: \"32px\",\n        height: \"32px\",\n        position: \"absolute\",\n        top: \"1.29rem\",\n        left: \"0.75rem\",\n        p: \"0\",\n        onClick: () => props.setDialog(0),\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          width: \"18px\",\n          height: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), \"Manage\", /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        top: \"1.29rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: \"1.8rem 0 0\",\n      children: props.tokenListSources.map((source, index) => {\n        return /*#__PURE__*/_jsxDEV(Flex, {\n          m: \"0 1.3rem 0\",\n          p: \"0 1.6rem\",\n          borderRadius: \"1.4rem\",\n          minH: \"5rem\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            width: \"33px\",\n            height: \"33px\",\n            objectFit: \"contain\",\n            src: source.logoURI,\n            alt: `${source.name} token`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            as: \"h3\",\n            m: \"0\",\n            fontSize: \"1.1rem\",\n            fontWeight: \"bold\",\n            textTransform: \"capitalize\",\n            children: source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            size: \"lg\",\n            isDisabled: index === 0 ? true : false,\n            isChecked: index === 0 ? true : source.enabled,\n            onChange: () => {\n              source.enabled = !source.enabled;\n              props.setTokenListSources([...props.tokenListSources]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = TokenListSelectDialog;\nexport const TokenSelector = props => {\n  _s3();\n\n  TokenSelector.propTypes = {\n    isSelect: PropTypes.number.isRequired,\n    setToken0: PropTypes.func.isRequired,\n    setToken1: PropTypes.func,\n    disableManage: PropTypes.bool,\n    tokenList: PropTypes.array,\n    isOpen: PropTypes.bool.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n  const initialRef = useRef();\n  const [dialog, setDialog] = useState(0);\n  const [tokenListSources, setTokenListSources] = useLocalStorage('tokenListSources', defaults.tokenList.sources);\n  const [tokenListCombined, setTokenListCombined] = useState(false);\n  const tokenList = useMemo(() => tokenListCombined, [tokenListCombined]);\n  useEffect(() => {\n    if (!props.isOpen) setDialog(0);\n  }, [props.isOpen]);\n  useEffect(() => {\n    if (!Array.isArray(props.tokenList)) {\n      getCombinedTokenListFromSources(tokenListSources).then(data => {\n        setTokenListCombined(data);\n      }).catch(err => {\n        setTokenListCombined(false);\n        console.log(err);\n      });\n    } else {\n      setTokenListCombined(props.tokenList);\n    }\n  }, [tokenListSources, props.tokenList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      isOpen: props.isOpen,\n      scrollBehavior: \"inside\",\n      isCentered: true,\n      autoFocus: false,\n      initialFocusRef: initialRef,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        maxWidth: \"454.883px\",\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          height: \"736px\",\n          children: [dialog === 0 && /*#__PURE__*/_jsxDEV(TokenSelectDialog, {\n            height: \"736px\",\n            tokenList: tokenList,\n            isSelect: props.isSelect,\n            setToken0: props.setToken0,\n            setToken1: props.setToken1,\n            onClose: props.onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 8\n          }, this), dialog === 1 && /*#__PURE__*/_jsxDEV(TokenListSelectDialog, {\n            tokenListSources: tokenListSources,\n            setTokenListSources: setTokenListSources,\n            setDialog: setDialog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 6\n        }, this), dialog === 0 && /*#__PURE__*/_jsxDEV(ModalFooter, {\n          borderTop: \"1px solid #00000017\",\n          justifyContent: \"center\",\n          children: !typeof props.disableManage === 'boolean' && !props.disableManage === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              fontWeight: \"bold\",\n              fontSize: \"1.1rem\",\n              onClick: () => setDialog(1),\n              children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                mr: \"6px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 12\n              }, this), \" Manage Token Lists\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 11\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s3(TokenSelector, \"xos/isMCcwXQjVo+K59ZPd8hjW4=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c4 = TokenSelector;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TokenSelectButton\");\n$RefreshReg$(_c2, \"TokenSelectDialog\");\n$RefreshReg$(_c3, \"TokenListSelectDialog\");\n$RefreshReg$(_c4, \"TokenSelector\");","map":{"version":3,"sources":["/home/augustin/literate-octo-guide/src/components/TokenSelector/index.js"],"names":["React","useRef","useMemo","useEffect","useState","PropTypes","defaults","Button","Box","Image","Modal","ModalHeader","ModalCloseButton","ModalOverlay","ModalContent","ModalBody","ModalFooter","Input","Switch","Flex","useToast","useLocalStorage","FixedSizeList","List","EditIcon","ArrowBackIcon","getCombinedTokenListFromSources","searchFor","tokenNotAvailableToselect","TokenSelectButton","data","index","style","propTypes","number","isRequired","object","any","toast","tokenList","disabled","opacity","cursor","boxShadow","isSelect","setToken0","setToken1","onClose","logoURI","name","symbol","TokenSelectDialog","props","func","tokenListModified","setTokenListModified","e","result","target","value","length","scrollbarColor","TokenListSelectDialog","tokenListSources","array","setTokenListSources","setDialog","map","source","enabled","TokenSelector","disableManage","bool","isOpen","onOpen","initialRef","dialog","sources","tokenListCombined","setTokenListCombined","Array","isArray","then","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useMemo, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport defaults from '../../common/defaults'\nimport { Button, Box, Image, Modal, ModalHeader, ModalCloseButton, ModalOverlay, ModalContent, ModalBody,\n\tModalFooter, Input, Switch, Flex, useToast,\n} from '@chakra-ui/react'\nimport { useLocalStorage } from 'react-use'\nimport { FixedSizeList as List } from 'react-window'\nimport { EditIcon, ArrowBackIcon } from '@chakra-ui/icons'\nimport { getCombinedTokenListFromSources, searchFor } from '../../common/utils'\nimport { tokenNotAvailableToselect } from '../../messages'\n\nconst TokenSelectButton = ({ data, index, style }) => {\n\tTokenSelectButton.propTypes = {\n\t\tindex: PropTypes.number.isRequired,\n\t\tstyle: PropTypes.object.isRequired,\n\t\tdata: PropTypes.any.isRequired,\n\t}\n\tconst toast = useToast()\n\treturn (\n\t\t<Button\n\t\t\tvariant='ghostSelectable'\n\t\t\tfontWeight='600'\n\t\t\tfontSize='1.2rem'\n\t\t\tjustifyContent='left'\n\t\t\tflexWrap='wrap'\n\t\t\talignContent='center'\n\t\t\tp='2rem 1.5rem'\n\t\t\tstyle={data.tokenList[index].disabled ? {\n\t\t\t\t...style,\n\t\t\t\topacity: '0.4',\n\t\t\t\tcursor: 'not-allowed',\n\t\t\t\tboxShadow: 'none',\n\t\t\t} : style}\n\t\t\tonClick={() => {\n\t\t\t\tif (data.tokenList) {\n\t\t\t\t\tif (!data.tokenList[index].disabled) {\n\t\t\t\t\t\tif (data.isSelect === 0) data.setToken0(data.tokenList[index])\n\t\t\t\t\t\tif (data.isSelect === 1) data.setToken1(data.tokenList[index])\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttoast(tokenNotAvailableToselect)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata.onClose()\n\t\t\t}}\n\t\t\tkey={index}>\n\t\t\t{data.tokenList &&\n\t\t\t\t<>\n\t\t\t\t\t<Box\n\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\tdisplay='inline-flex'>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\twidth='24px'\n\t\t\t\t\t\t\theight='24px'\n\t\t\t\t\t\t\tborderRadius='50%'\n\t\t\t\t\t\t\tbackground='white'\n\t\t\t\t\t\t\tmr='10px'\n\t\t\t\t\t\t\tsrc={data.tokenList[index].logoURI}\n\t\t\t\t\t\t\talt={`${data.tokenList[index].name} token`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{data.tokenList[index].symbol}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tpaddingLeft='34px'\n\t\t\t\t\t\tfontSize='1rem'\n\t\t\t\t\t\tfontWeight='100'\n\t\t\t\t\t\tcolor='#666'\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.tokenList[index].name}\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t}\n\t\t</Button>\n\t)\n}\n\nconst TokenSelectDialog = (props) => {\n\n\tTokenSelectDialog.propTypes = {\n\t\ttokenList: PropTypes.any.isRequired,\n\t\tisSelect: PropTypes.number.isRequired,\n\t\tsetToken0: PropTypes.func.isRequired,\n\t\tsetToken1: PropTypes.func,\n\t\tonClose: PropTypes.func.isRequired,\n\t}\n\n\tconst [tokenListModified, setTokenListModified] = useState(false)\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader>Select a token</ModalHeader>\n\t\t\t<ModalCloseButton\n\t\t\t\ttop='1.29rem'\n\t\t\t/>\n\t\t\t<ModalBody\n\t\t\t\tdisplay='flex'\n\t\t\t\tflexDir='column'>\n\t\t\t\t<Box\n\t\t\t\t\tp='0 1.5rem 1.5rem'\n\t\t\t\t\tborderBottom='1px solid #00000017'\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\tplaceholder='Search name or paste address'\n\t\t\t\t\t\tvariant='blank'\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tconst result = searchFor(props.tokenList, e.target.value)\n\t\t\t\t\t\t\tif (result && result.length !== 0) setTokenListModified(result)\n\t\t\t\t\t\t\t// if (result.length === 0 &&\n\t\t\t\t\t\t\t// \t\t\tisEthereumAddress(e.target.value)\n\t\t\t\t\t\t\t// ) console.log(resolveUnknownERC20(e.target.value, defaults.network.provider))\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t{props.tokenList &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\t\tmaxWidth={454.883}\n\t\t\t\t\t\t\t\t\theight={600}\n\t\t\t\t\t\t\t\t\titemCount={tokenListModified ? tokenListModified.length : props.tokenList.length}\n\t\t\t\t\t\t\t\t\titemSize={64}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tscrollbarColor: 'rgb(134, 134, 134) transparent',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\titemData={{\n\t\t\t\t\t\t\t\t\t\ttokenList: tokenListModified ? tokenListModified : props.tokenList,\n\t\t\t\t\t\t\t\t\t\tisSelect: props.isSelect,\n\t\t\t\t\t\t\t\t\t\tsetToken0: props.setToken0,\n\t\t\t\t\t\t\t\t\t\tsetToken1: props.setToken1,\n\t\t\t\t\t\t\t\t\t\tonClose: props.onClose,\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{TokenSelectButton}\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</ModalBody>\n\t\t</>\n\t)\n}\n\nconst TokenListSelectDialog = (props) => {\n\n\tTokenListSelectDialog.propTypes = {\n\t\ttokenListSources: PropTypes.array.isRequired,\n\t\tsetTokenListSources: PropTypes.func.isRequired,\n\t\tsetDialog: PropTypes.func.isRequired,\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader\n\t\t\t\ttextAlign='center'\n\t\t\t\tborderBottom='1px solid #00000017'\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='ghostDark'\n\t\t\t\t\tminW='auto'\n\t\t\t\t\twidth='32px'\n\t\t\t\t\theight='32px'\n\t\t\t\t\tposition='absolute'\n\t\t\t\t\ttop='1.29rem'\n\t\t\t\t\tleft='0.75rem'\n\t\t\t\t\tp='0'\n\t\t\t\t\tonClick={() => props.setDialog(0)}\n\t\t\t\t>\n\t\t\t\t\t<ArrowBackIcon\n\t\t\t\t\t\twidth='18px'\n\t\t\t\t\t\theight='18px'\n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t\tManage\n\t\t\t\t<ModalCloseButton\n\t\t\t\t\ttop='1.29rem'\n\t\t\t\t/>\n\t\t\t</ModalHeader>\n\t\t\t<ModalBody\n\t\t\t\tdisplay='flex'\n\t\t\t\tflexDir='column'\n\t\t\t\tp='1.8rem 0 0'>\n\t\t\t\t{props.tokenListSources.map((source, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tm='0 1.3rem 0'\n\t\t\t\t\t\t\tp='0 1.6rem'\n\t\t\t\t\t\t\tborderRadius='1.4rem'\n\t\t\t\t\t\t\tminH='5rem'\n\t\t\t\t\t\t\tjustifyContent='space-between'\n\t\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\twidth='33px'\n\t\t\t\t\t\t\t\theight='33px'\n\t\t\t\t\t\t\t\tobjectFit='contain'\n\t\t\t\t\t\t\t\tsrc={source.logoURI}\n\t\t\t\t\t\t\t\talt={`${source.name} token`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tas='h3'\n\t\t\t\t\t\t\t\tm='0'\n\t\t\t\t\t\t\t\tfontSize='1.1rem'\n\t\t\t\t\t\t\t\tfontWeight='bold'\n\t\t\t\t\t\t\t\ttextTransform='capitalize'>\n\t\t\t\t\t\t\t\t{source.name}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tisDisabled={index === 0 ? true : false}\n\t\t\t\t\t\t\t\tisChecked={index === 0 ? true : source.enabled}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsource.enabled = !source.enabled\n\t\t\t\t\t\t\t\t\tprops.setTokenListSources([ ...props.tokenListSources ])\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ModalBody>\n\t\t</>\n\t)\n}\n\nexport const TokenSelector = (props) => {\n\n\tTokenSelector.propTypes = {\n\t\tisSelect: PropTypes.number.isRequired,\n\t\tsetToken0: PropTypes.func.isRequired,\n\t\tsetToken1: PropTypes.func,\n\t\tdisableManage: PropTypes.bool,\n\t\ttokenList: PropTypes.array,\n\t\tisOpen: PropTypes.bool.isRequired,\n\t\tonOpen: PropTypes.func.isRequired,\n\t\tonClose: PropTypes.func.isRequired,\n\t}\n\n\tconst initialRef = useRef()\n\tconst [dialog, setDialog] = useState(0)\n\n\tconst [tokenListSources, setTokenListSources] = useLocalStorage('tokenListSources', defaults.tokenList.sources)\n\tconst [tokenListCombined, setTokenListCombined] = useState(false)\n\tconst tokenList = useMemo(() => tokenListCombined, [tokenListCombined])\n\n\tuseEffect(() => {\n\t\tif (!props.isOpen) setDialog(0)\n\t}, [props.isOpen])\n\n\tuseEffect(() => {\n\t\tif (!Array.isArray(props.tokenList)) {\n\t\t\tgetCombinedTokenListFromSources(\n\t\t\t\ttokenListSources,\n\t\t\t)\n\t\t\t\t.then(data => {\n\t\t\t\t\tsetTokenListCombined(data)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tsetTokenListCombined(false)\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tsetTokenListCombined(props.tokenList)\n\t\t}\n\t}, [tokenListSources, props.tokenList])\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tisOpen={props.isOpen}\n\t\t\t\tscrollBehavior='inside'\n\t\t\t\tisCentered\n\t\t\t\tautoFocus={false}\n\t\t\t\tinitialFocusRef={initialRef}>\n\t\t\t\t<ModalOverlay />\n\t\t\t\t<ModalContent\n\t\t\t\t\tmaxWidth='454.883px'\n\t\t\t\t\toverflow='hidden'>\n\t\t\t\t\t<Box height='736px'>\n\t\t\t\t\t\t{dialog === 0 &&\n\t\t\t\t\t\t\t<TokenSelectDialog\n\t\t\t\t\t\t\t\theight='736px'\n\t\t\t\t\t\t\t\ttokenList={tokenList}\n\t\t\t\t\t\t\t\tisSelect={props.isSelect}\n\t\t\t\t\t\t\t\tsetToken0={props.setToken0}\n\t\t\t\t\t\t\t\tsetToken1={props.setToken1}\n\t\t\t\t\t\t\t\tonClose={props.onClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{dialog === 1 &&\n\t\t\t\t\t\t\t<TokenListSelectDialog\n\t\t\t\t\t\t\t\ttokenListSources={tokenListSources}\n\t\t\t\t\t\t\t\tsetTokenListSources={setTokenListSources}\n\t\t\t\t\t\t\t\tsetDialog={setDialog}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{dialog === 0 &&\n\t\t\t\t\t\t<ModalFooter\n\t\t\t\t\t\t\tborderTop='1px solid #00000017'\n\t\t\t\t\t\t\tjustifyContent='center'>\n\t\t\t\t\t\t\t{!typeof props.disableManage === 'boolean' &&\n\t\t\t\t\t\t\t\t!props.disableManage === false &&\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='link'\n\t\t\t\t\t\t\t\t\t\t\tfontWeight='bold'\n\t\t\t\t\t\t\t\t\t\t\tfontSize='1.1rem'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDialog(1)}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<EditIcon mr='6px'/> Manage Token Lists\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t}\n\t\t\t\t</ModalContent>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}