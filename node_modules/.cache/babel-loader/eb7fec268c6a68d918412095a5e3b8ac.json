{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { ethers } from 'ethers';\nimport { getClaim } from '../common/ethereum';\nimport defaults from '../common/defaults';\nexport const useClaimableVeth = () => {\n  _s();\n\n  const wallet = useWallet();\n  const [block, setBlock] = useState(0);\n  const [claimable, setClaimable] = useState(ethers.BigNumber.from('0'));\n  useEffect(() => {\n    if (wallet.account) {\n      getClaim(wallet.account).then(n => {\n        setClaimable(n);\n      }).catch(err => console.log(err));\n    }\n  }, [wallet.account, block]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      defaults.network.provider.getBlockNumber().then(n => {\n        setBlock(n);\n      });\n    }, defaults.network.pollInterval);\n    defaults.network.provider.getBlockNumber().then(n => setBlock(n));\n    return () => clearInterval(interval);\n  }, []);\n  return claimable;\n};\n\n_s(useClaimableVeth, \"Eg5vC8R1YOLLY8bKniaYVRKg79I=\", false, function () {\n  return [useWallet];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useClaimableVeth.js"],"names":["useEffect","useState","useWallet","ethers","getClaim","defaults","useClaimableVeth","wallet","block","setBlock","claimable","setClaimable","BigNumber","from","account","then","n","catch","err","console","log","interval","setInterval","network","provider","getBlockNumber","pollInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAErC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACE,MAAM,CAACS,SAAP,CAAiBC,IAAjB,CAAsB,GAAtB,CAAD,CAA1C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIO,MAAM,CAACO,OAAX,EAAoB;AACnBV,MAAAA,QAAQ,CAACG,MAAM,CAACO,OAAR,CAAR,CACEC,IADF,CACQC,CAAD,IAAO;AACZL,QAAAA,YAAY,CAACK,CAAD,CAAZ;AACA,OAHF,EAIEC,KAJF,CAIQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJf;AAKA;AACD,GARQ,EAQN,CAACX,MAAM,CAACO,OAAR,EAAiBN,KAAjB,CARM,CAAT;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMqB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClCjB,MAAAA,QAAQ,CAACkB,OAAT,CAAiBC,QAAjB,CAA0BC,cAA1B,GACEV,IADF,CACOC,CAAC,IAAI;AACVP,QAAAA,QAAQ,CAACO,CAAD,CAAR;AACA,OAHF;AAIA,KAL2B,EAKzBX,QAAQ,CAACkB,OAAT,CAAiBG,YALQ,CAA5B;AAMArB,IAAAA,QAAQ,CAACkB,OAAT,CAAiBC,QAAjB,CAA0BC,cAA1B,GACEV,IADF,CACOC,CAAC,IAAIP,QAAQ,CAACO,CAAD,CADpB;AAEA,WAAO,MAAMW,aAAa,CAACN,QAAD,CAA1B;AACA,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOX,SAAP;AAEA,CA9BM;;GAAMJ,gB;UAEGJ,S","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { ethers } from 'ethers'\nimport { getClaim } from '../common/ethereum'\nimport defaults from '../common/defaults'\n\nexport const useClaimableVeth = () => {\n\n\tconst wallet = useWallet()\n\tconst [block, setBlock] = useState(0)\n\tconst [claimable, setClaimable] = useState(ethers.BigNumber.from('0'))\n\n\tuseEffect(() => {\n\t\tif (wallet.account) {\n\t\t\tgetClaim(wallet.account)\n\t\t\t\t.then((n) => {\n\t\t\t\t\tsetClaimable(n)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}, [wallet.account, block])\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tdefaults.network.provider.getBlockNumber()\n\t\t\t\t.then(n => {\n\t\t\t\t\tsetBlock(n)\n\t\t\t\t})\n\t\t}, defaults.network.pollInterval)\n\t\tdefaults.network.provider.getBlockNumber()\n\t\t\t.then(n => setBlock(n))\n\t\treturn () => clearInterval(interval)\n\t}, [])\n\n\treturn claimable\n\n}"]},"metadata":{},"sourceType":"module"}