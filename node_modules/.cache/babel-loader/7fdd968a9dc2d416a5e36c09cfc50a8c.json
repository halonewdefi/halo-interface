{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport { useQuery } from 'react-query';\nimport { getVirtualPrice } from '../common/ethereum';\nimport { useERC20Balance } from './useERC20Balance';\nimport defaults from '../common/defaults';\nexport const useUSDVprice = function () {\n  _s();\n\n  let rpc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let pollInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.api.graphql.pollInterval;\n  let staleTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.api.staleTime;\n\n  if (!rpc) {// GQL 2 DO\n  } else {\n    const usdv3crvfPrice = useQuery(`virtualPrice_${defaults.address.usdv3crvf}`, async () => {\n      return await getVirtualPrice(defaults.address.usdv3crvf);\n    }, {\n      staleTime: defaults.api.staleTime\n    });\n    const crv3poolPrice = useQuery(`virtualPrice_${defaults.address.crv3pool}`, async () => {\n      return await getVirtualPrice(defaults.address.crv3pool);\n    }, {\n      staleTime: defaults.api.staleTime\n    });\n\n    if (usdv3crvfPrice !== null && usdv3crvfPrice !== void 0 && usdv3crvfPrice.data && crv3poolPrice !== null && crv3poolPrice !== void 0 && crv3poolPrice.data) {\n      console.log(usdv3crvfPrice === null || usdv3crvfPrice === void 0 ? void 0 : usdv3crvfPrice.data.div(crv3poolPrice === null || crv3poolPrice === void 0 ? void 0 : crv3poolPrice.data));\n    }\n  }\n};\n\n_s(useUSDVprice, \"8/SaaYF0FfLEI9UrInhvSD/UCOc=\", false, function () {\n  return [useQuery, useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useUSDVprice.js"],"names":["useQuery","useApolloQuery","gql","getVirtualPrice","useERC20Balance","defaults","useUSDVprice","rpc","pollInterval","api","graphql","staleTime","usdv3crvfPrice","address","usdv3crvf","crv3poolPrice","crv3pool","data","console","log","div"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,SAASF,QAAT,QAAyB,aAAzB;AACA,SAASG,eAAT,QAAgC,oBAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAsG;AAAA;;AAAA,MAArGC,GAAqG,uEAA/F,IAA+F;AAAA,MAAzFC,YAAyF,uEAA1EH,QAAQ,CAACI,GAAT,CAAaC,OAAb,CAAqBF,YAAqD;AAAA,MAAvCG,SAAuC,uEAA3BN,QAAQ,CAACI,GAAT,CAAaE,SAAc;;AAEjI,MAAI,CAACJ,GAAL,EAAU,CACT;AACA,GAFD,MAGK;AAEJ,UAAMK,cAAc,GAAGZ,QAAQ,CAAE,gBAAeK,QAAQ,CAACQ,OAAT,CAAiBC,SAAU,EAA5C,EAC9B,YAAY;AACX,aAAO,MAAMX,eAAe,CAACE,QAAQ,CAACQ,OAAT,CAAiBC,SAAlB,CAA5B;AACA,KAH6B,EAG3B;AACFH,MAAAA,SAAS,EAAEN,QAAQ,CAACI,GAAT,CAAaE;AADtB,KAH2B,CAA/B;AAQA,UAAMI,aAAa,GAAGf,QAAQ,CAAE,gBAAeK,QAAQ,CAACQ,OAAT,CAAiBG,QAAS,EAA3C,EAC7B,YAAY;AACX,aAAO,MAAMb,eAAe,CAACE,QAAQ,CAACQ,OAAT,CAAiBG,QAAlB,CAA5B;AACA,KAH4B,EAG1B;AACFL,MAAAA,SAAS,EAAEN,QAAQ,CAACI,GAAT,CAAaE;AADtB,KAH0B,CAA9B;;AAQA,QACCC,cAAc,SAAd,IAAAA,cAAc,WAAd,IAAAA,cAAc,CAAEK,IAAhB,IACAF,aADA,aACAA,aADA,eACAA,aAAa,CAAEE,IAFhB,EAEsB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ,aAAYA,cAAZ,uBAAYA,cAAc,CAAEK,IAAhB,CAAqBG,GAArB,CAAyBL,aAAzB,aAAyBA,aAAzB,uBAAyBA,aAAa,CAAEE,IAAxC,CAAZ;AACA;AACD;AAED,CA9BM;;GAAMX,Y;UAOYN,Q,EAQDA,Q","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport { useQuery } from 'react-query'\nimport { getVirtualPrice } from '../common/ethereum'\nimport { useERC20Balance } from './useERC20Balance'\nimport defaults from '../common/defaults'\n\nexport const useUSDVprice = (rpc = true, pollInterval = defaults.api.graphql.pollInterval, staleTime = defaults.api.staleTime) => {\n\n\tif (!rpc) {\n\t\t// GQL 2 DO\n\t}\n\telse {\n\n\t\tconst usdv3crvfPrice = useQuery(`virtualPrice_${defaults.address.usdv3crvf}`,\n\t\t\tasync () => {\n\t\t\t\treturn await getVirtualPrice(defaults.address.usdv3crvf)\n\t\t\t}, {\n\t\t\t\tstaleTime: defaults.api.staleTime,\n\t\t\t},\n\t\t)\n\n\t\tconst crv3poolPrice = useQuery(`virtualPrice_${defaults.address.crv3pool}`,\n\t\t\tasync () => {\n\t\t\t\treturn await getVirtualPrice(defaults.address.crv3pool)\n\t\t\t}, {\n\t\t\t\tstaleTime: defaults.api.staleTime,\n\t\t\t},\n\t\t)\n\n\t\tif (\n\t\t\tusdv3crvfPrice?.data &&\n\t\t\tcrv3poolPrice?.data) {\n\t\t\tconsole.log(usdv3crvfPrice?.data.div(crv3poolPrice?.data))\n\t\t}\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}