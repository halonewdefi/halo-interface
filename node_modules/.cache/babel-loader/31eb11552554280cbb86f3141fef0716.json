{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport defaults from '../common/defaults';\nexport const useAccountPreCommits = function (address) {\n  _s();\n\n  var _commits$data;\n\n  let first = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  let skip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let pollInterval = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaults.api.graphql.pollInterval;\n  const query0 = gql`\n\tquery {\n\t\tcommitEvents(\n\t\t\tfirst: ${first}\n\t\t\tskip: ${skip}\n\t\t\torderBy: timestamp\n\t\t\torderDirection: desc\n\t\t\twhere: {\n\t\t\t\tdepositor: \"${address}\"\n\t\t\t}\n\t\t)\n\t\t{\n\t\t\tid\n\t\t\tamount\n\t\t\tindex\n\t\t\ttimestamp\n\t\t}\n\t}`;\n  const query1 = gql`\n\tquery {\n\t\tuncommitEvents(\n\t\t\tfirst: ${first}\n\t\t\tskip: ${skip}\n\t\t\torderBy: timestamp\n\t\t\torderDirection: desc\n\t\t\twhere: {\n\t\t\t\tdepositor: \"${address}\"\n\t\t\t}\n\t\t)\n\t\t{\n\t\t\tid\n\t\t\tindex\n\t\t\ttimestamp\n\t\t}\n\t}`;\n  const commits = useApolloQuery(query0, {\n    pollInterval: pollInterval\n  });\n  const uncommits = useApolloQuery(query1, {\n    pollInterval: pollInterval\n  });\n  const events = commits === null || commits === void 0 ? void 0 : (_commits$data = commits.data) === null || _commits$data === void 0 ? void 0 : _commits$data.commitEvents.filter(commit => {\n    var _uncommits$data, _uncommits$data2, _uncommits$data2$unco;\n\n    console.log(uncommits === null || uncommits === void 0 ? void 0 : (_uncommits$data = uncommits.data) === null || _uncommits$data === void 0 ? void 0 : _uncommits$data.uncommitEvents.index['8']);\n    return (commit === null || commit === void 0 ? void 0 : commit.index) !== (uncommits === null || uncommits === void 0 ? void 0 : (_uncommits$data2 = uncommits.data) === null || _uncommits$data2 === void 0 ? void 0 : (_uncommits$data2$unco = _uncommits$data2.uncommitEvents) === null || _uncommits$data2$unco === void 0 ? void 0 : _uncommits$data2$unco.index);\n  });\n  console.log(events);\n  return commits;\n};\n\n_s(useAccountPreCommits, \"4PgJdfuRNZKP6SbGnkVP1BY/60Y=\", false, function () {\n  return [useApolloQuery, useApolloQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useAccountPreCommits.js"],"names":["useQuery","useApolloQuery","gql","defaults","useAccountPreCommits","address","first","skip","pollInterval","api","graphql","query0","query1","commits","uncommits","events","data","commitEvents","filter","commit","console","log","uncommitEvents","index"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,UAACC,OAAD,EAAuF;AAAA;;AAAA;;AAAA,MAA7EC,KAA6E,uEAArE,IAAqE;AAAA,MAA/DC,IAA+D,uEAAxD,CAAwD;AAAA,MAArDC,YAAqD,uEAAtCL,QAAQ,CAACM,GAAT,CAAaC,OAAb,CAAqBF,YAAiB;AAE1H,QAAMG,MAAM,GAAGT,GAAI;AACpB;AACA;AACA,YAAYI,KAAM;AAClB,WAAWC,IAAK;AAChB;AACA;AACA;AACA,kBAAkBF,OAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBC;AAmBA,QAAMO,MAAM,GAAGV,GAAI;AACpB;AACA;AACA,YAAYI,KAAM;AAClB,WAAWC,IAAK;AAChB;AACA;AACA;AACA,kBAAkBF,OAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBC;AAkBA,QAAMQ,OAAO,GAAGZ,cAAc,CAC7BU,MAD6B,EAE7B;AACCH,IAAAA,YAAY,EAAEA;AADf,GAF6B,CAA9B;AAOA,QAAMM,SAAS,GAAGb,cAAc,CAC/BW,MAD+B,EAE/B;AACCJ,IAAAA,YAAY,EAAEA;AADf,GAF+B,CAAhC;AAOA,QAAMO,MAAM,GAAGF,OAAH,aAAGA,OAAH,wCAAGA,OAAO,CAAEG,IAAZ,kDAAG,cAAeC,YAAf,CAA4BC,MAA5B,CAAoCC,MAAD,IAAY;AAAA;;AAC7DC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,aAAYA,SAAZ,0CAAYA,SAAS,CAAEE,IAAvB,oDAAY,gBAAiBM,cAAjB,CAAgCC,KAAhC,CAAsC,GAAtC,CAAZ;AACA,WAAO,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEI,KAAR,OAAkBT,SAAlB,aAAkBA,SAAlB,2CAAkBA,SAAS,CAAEE,IAA7B,8EAAkB,iBAAiBM,cAAnC,0DAAkB,sBAAiCC,KAAnD,CAAP;AACA,GAHc,CAAf;AAKAH,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEA,SAAOF,OAAP;AAEA,CA9DM;;GAAMT,oB;UAuCIH,c,EAOEA,c","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport defaults from '../common/defaults'\n\nexport const useAccountPreCommits = (address, first = 1000, skip = 0, pollInterval = defaults.api.graphql.pollInterval) => {\n\n\tconst query0 = gql`\n\tquery {\n\t\tcommitEvents(\n\t\t\tfirst: ${first}\n\t\t\tskip: ${skip}\n\t\t\torderBy: timestamp\n\t\t\torderDirection: desc\n\t\t\twhere: {\n\t\t\t\tdepositor: \"${address}\"\n\t\t\t}\n\t\t)\n\t\t{\n\t\t\tid\n\t\t\tamount\n\t\t\tindex\n\t\t\ttimestamp\n\t\t}\n\t}`\n\n\tconst query1 = gql`\n\tquery {\n\t\tuncommitEvents(\n\t\t\tfirst: ${first}\n\t\t\tskip: ${skip}\n\t\t\torderBy: timestamp\n\t\t\torderDirection: desc\n\t\t\twhere: {\n\t\t\t\tdepositor: \"${address}\"\n\t\t\t}\n\t\t)\n\t\t{\n\t\t\tid\n\t\t\tindex\n\t\t\ttimestamp\n\t\t}\n\t}`\n\n\tconst commits = useApolloQuery(\n\t\tquery0,\n\t\t{\n\t\t\tpollInterval: pollInterval,\n\t\t},\n\t)\n\n\tconst uncommits = useApolloQuery(\n\t\tquery1,\n\t\t{\n\t\t\tpollInterval: pollInterval,\n\t\t},\n\t)\n\n\tconst events = commits?.data?.commitEvents.filter((commit) => {\n\t\tconsole.log(uncommits?.data?.uncommitEvents.index['8'])\n\t\treturn commit?.index !== uncommits?.data?.uncommitEvents?.index\n\t})\n\n\tconsole.log(events)\n\n\treturn commits\n\n}"]},"metadata":{},"sourceType":"module"}