{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { ethers } from 'ethers';\nimport { bondPendingPayoutFor } from '../common/ethereum';\nimport defaults from '../common/defaults';\nexport const useBondPendingPayout = bondContractAddress => {\n  _s();\n\n  const wallet = useWallet();\n  const [block, setBlock] = useState(0);\n  const [claimable, setClaimable] = useState(ethers.BigNumber.from('0'));\n  useEffect(() => {\n    if (wallet.account && bondContractAddress) {\n      bondPendingPayoutFor(bondContractAddress, wallet.account).then(n => {\n        setClaimable(n);\n      }).catch(err => console.log(err));\n    }\n  }, [wallet.account, bondContractAddress, block]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      defaults.network.provider.getBlockNumber().then(n => {\n        setBlock(n);\n      });\n    }, defaults.network.pollInterval);\n    defaults.network.provider.getBlockNumber().then(n => setBlock(n));\n    return () => clearInterval(interval);\n  }, []);\n  return [claimable, setBlock];\n};\n\n_s(useBondPendingPayout, \"Eg5vC8R1YOLLY8bKniaYVRKg79I=\", false, function () {\n  return [useWallet];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useBondPendingPayout.js"],"names":["useEffect","useState","useWallet","ethers","bondPendingPayoutFor","defaults","useBondPendingPayout","bondContractAddress","wallet","block","setBlock","claimable","setClaimable","BigNumber","from","account","then","n","catch","err","console","log","interval","setInterval","network","provider","getBlockNumber","pollInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,mBAAD,IAAyB;AAAA;;AAE5D,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACE,MAAM,CAACU,SAAP,CAAiBC,IAAjB,CAAsB,GAAtB,CAAD,CAA1C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIQ,MAAM,CAACO,OAAP,IAAkBR,mBAAtB,EAA2C;AAC1CH,MAAAA,oBAAoB,CAACG,mBAAD,EAAsBC,MAAM,CAACO,OAA7B,CAApB,CACEC,IADF,CACQC,CAAD,IAAO;AACZL,QAAAA,YAAY,CAACK,CAAD,CAAZ;AACA,OAHF,EAIEC,KAJF,CAIQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJf;AAKA;AACD,GARQ,EAQN,CAACX,MAAM,CAACO,OAAR,EAAiBR,mBAAjB,EAAsCE,KAAtC,CARM,CAAT;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMsB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClClB,MAAAA,QAAQ,CAACmB,OAAT,CAAiBC,QAAjB,CAA0BC,cAA1B,GACEV,IADF,CACOC,CAAC,IAAI;AACVP,QAAAA,QAAQ,CAACO,CAAD,CAAR;AACA,OAHF;AAIA,KAL2B,EAKzBZ,QAAQ,CAACmB,OAAT,CAAiBG,YALQ,CAA5B;AAMAtB,IAAAA,QAAQ,CAACmB,OAAT,CAAiBC,QAAjB,CAA0BC,cAA1B,GACEV,IADF,CACOC,CAAC,IAAIP,QAAQ,CAACO,CAAD,CADpB;AAEA,WAAO,MAAMW,aAAa,CAACN,QAAD,CAA1B;AACA,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO,CAACX,SAAD,EAAYD,QAAZ,CAAP;AAEA,CA9BM;;GAAMJ,oB;UAEGJ,S","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { ethers } from 'ethers'\nimport { bondPendingPayoutFor } from '../common/ethereum'\nimport defaults from '../common/defaults'\n\nexport const useBondPendingPayout = (bondContractAddress) => {\n\n\tconst wallet = useWallet()\n\tconst [block, setBlock] = useState(0)\n\tconst [claimable, setClaimable] = useState(ethers.BigNumber.from('0'))\n\n\tuseEffect(() => {\n\t\tif (wallet.account && bondContractAddress) {\n\t\t\tbondPendingPayoutFor(bondContractAddress, wallet.account)\n\t\t\t\t.then((n) => {\n\t\t\t\t\tsetClaimable(n)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}, [wallet.account, bondContractAddress, block])\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tdefaults.network.provider.getBlockNumber()\n\t\t\t\t.then(n => {\n\t\t\t\t\tsetBlock(n)\n\t\t\t\t})\n\t\t}, defaults.network.pollInterval)\n\t\tdefaults.network.provider.getBlockNumber()\n\t\t\t.then(n => setBlock(n))\n\t\treturn () => clearInterval(interval)\n\t}, [])\n\n\treturn [claimable, setBlock]\n\n}"]},"metadata":{},"sourceType":"module"}