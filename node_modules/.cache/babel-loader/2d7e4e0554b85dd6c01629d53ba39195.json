{"ast":null,"code":"var _jsxFileName = \"/home/augustin/literate-octo-guide/src/components/WalletConnectionModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport defaults from '../../common/defaults';\nimport { useWallet } from 'use-wallet';\nimport { Modal, ModalHeader, ModalOverlay, ModalContent, ModalBody, ModalCloseButton, Box, Button, Flex, Grid, GridItem, Image, Text, useToast } from '@chakra-ui/react';\nimport { walletNotConnected } from '../messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WalletConnectionModal = props => {\n  _s();\n\n  WalletConnectionModal.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    setWorking: PropTypes.func.isRequired\n  };\n  const wallet = useWallet();\n  const toast = useToast();\n  const wallets = Object.values(defaults.network.connectors).map(item => item.meta);\n  useEffect(() => {\n    if (wallet.error) {\n      return toast({ ...walletNotConnected,\n        description: wallet.error.message\n      });\n    }\n  }, [wallet.error]);\n\n  const connect = key => {\n    props.onClose();\n    props.setWorking(true);\n    wallet.connect(key).catch(err => {\n      console.log(err);\n      toast({ ...walletNotConnected,\n        description: err.message\n      });\n    }).finally(() => {\n      props.setWorking(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      isOpen: props.isOpen,\n      autoFocus: false,\n      scrollBehavior: \"inside\",\n      isCentered: true,\n      size: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          top: \"1.29rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          minH: \"138px\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: \"3px 1.5rem 1.5rem\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(3, 1fr)\",\n              gap: 3,\n              children: wallets.map(w => /*#__PURE__*/_jsxDEV(GridItem, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"modalCentricLarge\",\n                  display: \"flex\",\n                  width: \"100%\",\n                  flexDir: \"column\",\n                  alignItems: \"center\",\n                  onClick: () => connect(w.key),\n                  children: [/*#__PURE__*/_jsxDEV(Flex, {\n                    minH: \"50px\",\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: w.logo,\n                      alt: `${w.name} logo`,\n                      width: \"50px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    mt: \"0.5rem\",\n                    children: w.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 11\n                }, this)\n              }, w.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(WalletConnectionModal, \"CQLlkW22frA8GZLl8dQE4L1kDcU=\", false, function () {\n  return [useWallet, useToast];\n});\n\n_c = WalletConnectionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletConnectionModal\");","map":{"version":3,"sources":["/home/augustin/literate-octo-guide/src/components/WalletConnectionModal/index.js"],"names":["React","useEffect","PropTypes","defaults","useWallet","Modal","ModalHeader","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Box","Button","Flex","Grid","GridItem","Image","Text","useToast","walletNotConnected","WalletConnectionModal","props","propTypes","isOpen","bool","isRequired","onClose","func","setWorking","wallet","toast","wallets","Object","values","network","connectors","map","item","meta","error","description","message","connect","key","catch","err","console","log","finally","w","logo","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport defaults from '../../common/defaults'\nimport { useWallet } from 'use-wallet'\nimport {\n\tModal,\n\tModalHeader,\n\tModalOverlay,\n\tModalContent,\n\tModalBody,\n\tModalCloseButton,\n\tBox,\n\tButton,\n\tFlex,\n\tGrid,\n\tGridItem,\n\tImage,\n\tText,\n\tuseToast,\n} from '@chakra-ui/react'\nimport { walletNotConnected } from '../messages'\n\nexport const WalletConnectionModal = props => {\n\tWalletConnectionModal.propTypes = {\n\t\tisOpen: PropTypes.bool.isRequired,\n\t\tonClose: PropTypes.func.isRequired,\n\t\tsetWorking: PropTypes.func.isRequired,\n\t}\n\tconst wallet = useWallet()\n\tconst toast = useToast()\n\tconst wallets = Object.values(defaults.network.connectors).map(\n\t\titem => item.meta,\n\t)\n\n\tuseEffect(() => {\n\t\tif (wallet.error) {\n\t\t\treturn toast({\n\t\t\t\t...walletNotConnected,\n\t\t\t\tdescription: wallet.error.message,\n\t\t\t})\n\t\t}\n\t}, [wallet.error])\n\n\tconst connect = key => {\n\t\tprops.onClose()\n\t\tprops.setWorking(true)\n\t\twallet\n\t\t\t.connect(key)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\ttoast({\n\t\t\t\t\t...walletNotConnected,\n\t\t\t\t\tdescription: err.message,\n\t\t\t\t})\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tprops.setWorking(false)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tonClose={props.onClose}\n\t\t\t\tisOpen={props.isOpen}\n\t\t\t\tautoFocus={false}\n\t\t\t\tscrollBehavior='inside'\n\t\t\t\tisCentered\n\t\t\t\tsize='xl'\n\t\t\t>\n\t\t\t\t<ModalOverlay />\n\t\t\t\t<ModalContent overflow='hidden'>\n\t\t\t\t\t<ModalHeader>Connect Wallet</ModalHeader>\n\t\t\t\t\t<ModalCloseButton top='1.29rem' />\n\t\t\t\t\t<ModalBody minH='138px'>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tp='3px 1.5rem 1.5rem'>\n\t\t\t\t\t\t\t<Grid templateColumns='repeat(3, 1fr)' gap={3}>\n\t\t\t\t\t\t\t\t{wallets.map(w => (\n\t\t\t\t\t\t\t\t\t<GridItem\n\t\t\t\t\t\t\t\t\t\tkey={w.name}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='modalCentricLarge'\n\t\t\t\t\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\t\t\t\tflexDir='column'\n\t\t\t\t\t\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => connect(w.key)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Flex minH='50px'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Image src={w.logo} alt={`${w.name} logo`} width='50px'/>\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t\t<Text mt='0.5rem'>\n\t\t\t\t\t\t\t\t\t\t\t\t{w.name}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t</ModalContent>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}