{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport { useQuery } from 'react-query';\nimport { getERC20BalanceOf, getStakingRewardsBalanceOf } from '../common/ethereum';\nimport defaults from '../common/defaults';\nexport const useStakingRewardsBalanceOf = function (address) {\n  _s();\n\n  let rpc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let pollInterval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.api.graphql.pollInterval;\n  let staleTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaults.api.staleTime;\n\n  if (!rpc) {// GQL 2 DO\n  } else {\n    const balance = useQuery(`${defaults.address.stakingRewards}_stakingRewardsBalanceOf_${address}`, async () => {\n      if (address) {\n        return await getStakingRewardsBalanceOf(address);\n      }\n    }, {\n      staleTime: defaults.api.staleTime,\n      enabled: !!address\n    });\n    return balance;\n  }\n};\n\n_s(useStakingRewardsBalanceOf, \"+/joeJi+/VhTR9ojWI3/jl+qhcI=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useStakingRewardsBalanceOf.js"],"names":["useQuery","useApolloQuery","gql","getERC20BalanceOf","getStakingRewardsBalanceOf","defaults","useStakingRewardsBalanceOf","address","rpc","pollInterval","api","graphql","staleTime","balance","stakingRewards","enabled"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,SAASF,QAAT,QAAyB,aAAzB;AACA,SAASG,iBAAT,EAA4BC,0BAA5B,QAA8D,oBAA9D;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,0BAA0B,GAAG,UAACC,OAAD,EAA+G;AAAA;;AAAA,MAArGC,GAAqG,uEAA/F,IAA+F;AAAA,MAAzFC,YAAyF,uEAA1EJ,QAAQ,CAACK,GAAT,CAAaC,OAAb,CAAqBF,YAAqD;AAAA,MAAvCG,SAAuC,uEAA3BP,QAAQ,CAACK,GAAT,CAAaE,SAAc;;AAExJ,MAAI,CAACJ,GAAL,EAAU,CACT;AACA,GAFD,MAGK;AAEJ,UAAMK,OAAO,GAAGb,QAAQ,CAAE,GAAEK,QAAQ,CAACE,OAAT,CAAiBO,cAAe,4BAA2BP,OAAQ,EAAvE,EACvB,YAAY;AACX,UAAIA,OAAJ,EAAa;AACZ,eAAO,MAAMH,0BAA0B,CACtCG,OADsC,CAAvC;AAGA;AACD,KAPsB,EAOpB;AACFK,MAAAA,SAAS,EAAEP,QAAQ,CAACK,GAAT,CAAaE,SADtB;AAEFG,MAAAA,OAAO,EAAG,CAAC,CAACR;AAFV,KAPoB,CAAxB;AAaA,WAAOM,OAAP;AACA;AAED,CAvBM;;GAAMP,0B;UAOKN,Q","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport { useQuery } from 'react-query'\nimport { getERC20BalanceOf, getStakingRewardsBalanceOf } from '../common/ethereum'\nimport defaults from '../common/defaults'\n\nexport const useStakingRewardsBalanceOf = (address, rpc = true, pollInterval = defaults.api.graphql.pollInterval, staleTime = defaults.api.staleTime) => {\n\n\tif (!rpc) {\n\t\t// GQL 2 DO\n\t}\n\telse {\n\n\t\tconst balance = useQuery(`${defaults.address.stakingRewards}_stakingRewardsBalanceOf_${address}`,\n\t\t\tasync () => {\n\t\t\t\tif (address) {\n\t\t\t\t\treturn await getStakingRewardsBalanceOf(\n\t\t\t\t\t\taddress,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tstaleTime: defaults.api.staleTime,\n\t\t\t\tenabled: (!!address),\n\t\t\t},\n\t\t)\n\n\t\treturn balance\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}