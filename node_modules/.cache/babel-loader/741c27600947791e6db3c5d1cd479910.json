{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport { useQuery } from 'react-query';\nimport { getMinterDailyLimits, getMinter } from '../common/ethereum';\nimport defaults from '../common/defaults';\nexport const useMinterDailyLimits = function () {\n  _s();\n\n  let rpc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let pollInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.api.graphql.pollInterval;\n  let staleTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.api.staleTime;\n\n  if (!rpc) {// GQL 2 DO\n  } else {\n    const {\n      data: minter\n    } = useQuery('minter', async () => {\n      return await getMinter();\n    }, {\n      staleTime: staleTime\n    });\n    const limits = useQuery('dailyLimits', async () => {\n      return await getMinterDailyLimits(minter);\n    }, {\n      staleTime: staleTime,\n      enabled: !!minter\n    });\n    return limits;\n  }\n};\n\n_s(useMinterDailyLimits, \"53SDYAswwle+Uny/wHDCEWwBU+Y=\", false, function () {\n  return [useQuery, useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useMinterDailyLimits.js"],"names":["useQuery","useApolloQuery","gql","getMinterDailyLimits","getMinter","defaults","useMinterDailyLimits","rpc","pollInterval","api","graphql","staleTime","data","minter","limits","enabled"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,SAASF,QAAT,QAAyB,aAAzB;AACA,SAASG,oBAAT,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,YAAsG;AAAA;;AAAA,MAArGC,GAAqG,uEAA/F,IAA+F;AAAA,MAAzFC,YAAyF,uEAA1EH,QAAQ,CAACI,GAAT,CAAaC,OAAb,CAAqBF,YAAqD;AAAA,MAAvCG,SAAuC,uEAA3BN,QAAQ,CAACI,GAAT,CAAaE,SAAc;;AAEzI,MAAI,CAACJ,GAAL,EAAU,CACT;AACA,GAFD,MAGK;AAEJ,UAAM;AAAEK,MAAAA,IAAI,EAAEC;AAAR,QAAmBb,QAAQ,CAAC,QAAD,EAAW,YAAY;AACvD,aAAO,MAAMI,SAAS,EAAtB;AACA,KAFgC,EAE9B;AACFO,MAAAA,SAAS,EAAEA;AADT,KAF8B,CAAjC;AAOA,UAAMG,MAAM,GAAGd,QAAQ,CAAC,aAAD,EAAgB,YAAY;AAClD,aAAO,MAAMG,oBAAoB,CAACU,MAAD,CAAjC;AACA,KAFsB,EAEpB;AACFF,MAAAA,SAAS,EAAEA,SADT;AAEFI,MAAAA,OAAO,EAAE,CAAC,CAACF;AAFT,KAFoB,CAAvB;AAQA,WAAOC,MAAP;AACA;AAED,CAzBM;;GAAMR,oB;UAOcN,Q,EAOVA,Q","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport { useQuery } from 'react-query'\nimport { getMinterDailyLimits, getMinter } from '../common/ethereum'\nimport defaults from '../common/defaults'\n\nexport const useMinterDailyLimits = (rpc = true, pollInterval = defaults.api.graphql.pollInterval, staleTime = defaults.api.staleTime) => {\n\n\tif (!rpc) {\n\t\t// GQL 2 DO\n\t}\n\telse {\n\n\t\tconst { data: minter } = useQuery('minter', async () => {\n\t\t\treturn await getMinter()\n\t\t}, {\n\t\t\tstaleTime: staleTime,\n\t\t},\n\t\t)\n\n\t\tconst limits = useQuery('dailyLimits', async () => {\n\t\t\treturn await getMinterDailyLimits(minter)\n\t\t}, {\n\t\t\tstaleTime: staleTime,\n\t\t\tenabled: !!minter,\n\t\t},\n\t\t)\n\n\t\treturn limits\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}