{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { BigNumber } from 'ethers';\nimport { useQuery } from 'react-query';\nimport defaults from '../common/defaults';\nimport { getMinter, getMinterDailyLimits, getCycleMints } from '../common/ethereum';\nexport const useMintLimitRemains = function () {\n  _s();\n\n  var _limits$data, _limits$data2;\n\n  let staleTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.api.staleTime;\n  const {\n    data: minter\n  } = useQuery('minter', async () => {\n    return await getMinter();\n  }, {\n    staleTime: staleTime\n  });\n  const limits = useQuery('dailyLimits', () => {\n    return getMinterDailyLimits(minter);\n  }, {\n    staleTime: staleTime,\n    enabled: !!minter\n  });\n  const minted = useQuery('cycleMinted', async () => {\n    return await getCycleMints(minter);\n  }, {\n    staleTime: staleTime,\n    enabled: !!minter\n  });\n  const amount = limits !== null && limits !== void 0 && (_limits$data = limits.data) !== null && _limits$data !== void 0 && _limits$data[1] && minted !== null && minted !== void 0 && minted.data ? limits === null || limits === void 0 ? void 0 : (_limits$data2 = limits.data) === null || _limits$data2 === void 0 ? void 0 : _limits$data2[1].sub(minted === null || minted === void 0 ? void 0 : minted.data) : BigNumber.from('0');\n  return [amount, minted.refetch];\n};\n\n_s(useMintLimitRemains, \"KlQHQJaO9IVZL3hCqlsX9kOzWVA=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useMintLimitRemains.js"],"names":["BigNumber","useQuery","defaults","getMinter","getMinterDailyLimits","getCycleMints","useMintLimitRemains","staleTime","api","data","minter","limits","enabled","minted","amount","sub","from","refetch"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,EAAoBC,oBAApB,EAA0CC,aAA1C,QAA+D,oBAA/D;AAEA,OAAO,MAAMC,mBAAmB,GAAG,YAAwC;AAAA;;AAAA;;AAAA,MAAvCC,SAAuC,uEAA3BL,QAAQ,CAACM,GAAT,CAAaD,SAAc;AAE1E,QAAM;AAAEE,IAAAA,IAAI,EAAEC;AAAR,MAAmBT,QAAQ,CAAC,QAAD,EAAW,YAAY;AACvD,WAAO,MAAME,SAAS,EAAtB;AACA,GAFgC,EAE9B;AACFI,IAAAA,SAAS,EAAEA;AADT,GAF8B,CAAjC;AAOA,QAAMI,MAAM,GAAGV,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5C,WAAOG,oBAAoB,CAACM,MAAD,CAA3B;AACA,GAFsB,EAEpB;AACFH,IAAAA,SAAS,EAAEA,SADT;AAEFK,IAAAA,OAAO,EAAE,CAAC,CAACF;AAFT,GAFoB,CAAvB;AAQA,QAAMG,MAAM,GAAGZ,QAAQ,CAAC,aAAD,EAAgB,YAAY;AAClD,WAAO,MAAMI,aAAa,CAACK,MAAD,CAA1B;AACA,GAFsB,EAEpB;AACFH,IAAAA,SAAS,EAAEA,SADT;AAEFK,IAAAA,OAAO,EAAE,CAAC,CAACF;AAFT,GAFoB,CAAvB;AAQA,QAAMI,MAAM,GAAGH,MAAM,SAAN,IAAAA,MAAM,WAAN,oBAAAA,MAAM,CAAEF,IAAR,sDAAe,CAAf,KAAqBI,MAArB,aAAqBA,MAArB,eAAqBA,MAAM,CAAEJ,IAA7B,GAAoCE,MAApC,aAAoCA,MAApC,wCAAoCA,MAAM,CAAEF,IAA5C,kDAAoC,cAAe,CAAf,EAAkBM,GAAlB,CAAsBF,MAAtB,aAAsBA,MAAtB,uBAAsBA,MAAM,CAAEJ,IAA9B,CAApC,GAA0ET,SAAS,CAACgB,IAAV,CAAe,GAAf,CAAzF;AACA,SAAO,CAACF,MAAD,EAASD,MAAM,CAACI,OAAhB,CAAP;AACA,CA3BM;;GAAMX,mB;UAEaL,Q,EAOVA,Q,EAQAA,Q","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { BigNumber } from 'ethers'\nimport { useQuery } from 'react-query'\nimport defaults from '../common/defaults'\nimport { getMinter, getMinterDailyLimits, getCycleMints } from '../common/ethereum'\n\nexport const useMintLimitRemains = (staleTime = defaults.api.staleTime) => {\n\n\tconst { data: minter } = useQuery('minter', async () => {\n\t\treturn await getMinter()\n\t}, {\n\t\tstaleTime: staleTime,\n\t},\n\t)\n\n\tconst limits = useQuery('dailyLimits', () => {\n\t\treturn getMinterDailyLimits(minter)\n\t}, {\n\t\tstaleTime: staleTime,\n\t\tenabled: !!minter,\n\t},\n\t)\n\n\tconst minted = useQuery('cycleMinted', async () => {\n\t\treturn await getCycleMints(minter)\n\t}, {\n\t\tstaleTime: staleTime,\n\t\tenabled: !!minter,\n\t},\n\t)\n\n\tconst amount = limits?.data?.[1] && minted?.data ? limits?.data?.[1].sub(minted?.data) : BigNumber.from('0')\n\treturn [amount, minted.refetch]\n}"]},"metadata":{},"sourceType":"module"}