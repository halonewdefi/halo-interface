{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport { utils } from 'ethers';\nimport defaults from '../common/defaults';\nexport const useUsdvMintedBurnt = function () {\n  _s();\n\n  var _wallet, _wallet2;\n\n  let burnt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let pollInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.api.graphql.pollInterval;\n  const limit = utils.parseEther('200000');\n  const amount = useQuery(`${tokenAddress}_erc20Balanceof_${(_wallet = wallet) === null || _wallet === void 0 ? void 0 : _wallet.account}`, async () => {\n    return;\n  }, {\n    staleTime: defaults.api.staleTime,\n    enabled: !!((_wallet2 = wallet) !== null && _wallet2 !== void 0 && _wallet2.account) && !!tokenAddress\n  });\n  return amount;\n};\n\n_s(useUsdvMintedBurnt, \"+9m0AQXySIU6JvUlfIGvRgpvkow=\", true);","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useUsdvMintedBurnt.js"],"names":["useQuery","useApolloQuery","gql","utils","defaults","useUsdvMintedBurnt","burnt","pollInterval","api","graphql","limit","parseEther","amount","tokenAddress","wallet","account","staleTime","enabled"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAqE;AAAA;;AAAA;;AAAA,MAApEC,KAAoE,uEAA5D,KAA4D;AAAA,MAArDC,YAAqD,uEAAtCH,QAAQ,CAACI,GAAT,CAAaC,OAAb,CAAqBF,YAAiB;AAEtG,QAAMG,KAAK,GAAGP,KAAK,CAACQ,UAAN,CAAiB,QAAjB,CAAd;AAEA,QAAMC,MAAM,GAAGZ,QAAQ,CAAE,GAAEa,YAAa,mBAAhB,WAAkCC,MAAlC,4CAAkC,QAAQC,OAAQ,EAAnD,EACtB,YAAY;AACX;AACA,GAHqB,EAGnB;AACFC,IAAAA,SAAS,EAAEZ,QAAQ,CAACI,GAAT,CAAaQ,SADtB;AAEFC,IAAAA,OAAO,EAAG,CAAC,cAACH,MAAD,qCAAC,SAAQC,OAAT,CAAD,IAAqB,CAAC,CAACF;AAF/B,GAHmB,CAAvB;AASA,SAAOD,MAAP;AAEA,CAfM;;GAAMP,kB","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport { utils } from 'ethers'\nimport defaults from '../common/defaults'\n\nexport const useUsdvMintedBurnt = (burnt = false, pollInterval = defaults.api.graphql.pollInterval) => {\n\n\tconst limit = utils.parseEther('200000')\n\n\tconst amount = useQuery(`${tokenAddress}_erc20Balanceof_${wallet?.account}`,\n\t\tasync () => {\n\t\t\treturn \n\t\t}, {\n\t\t\tstaleTime: defaults.api.staleTime,\n\t\t\tenabled: (!!wallet?.account && !!tokenAddress),\n\t\t},\n\t)\n\n\treturn amount\n\n}"]},"metadata":{},"sourceType":"module"}