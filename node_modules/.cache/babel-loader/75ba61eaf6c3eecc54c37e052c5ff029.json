{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client';\nimport { useQuery } from 'react-query';\nimport { getMinter, getPublicFee } from '../common/ethereum';\nimport defaults from '../common/defaults';\nexport const usePublicFee = function () {\n  _s();\n\n  let rpc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let pollInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.api.graphql.pollInterval;\n  let staleTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.api.staleTime;\n\n  if (!rpc) {// GQL 2 DO\n  } else {\n    const {\n      data: minter\n    } = useQuery('minter', async () => {\n      return await getMinter();\n    }, {\n      staleTime: staleTime\n    });\n    const fee = useQuery('getPublicFee', async () => {\n      if (minter) {\n        return await getPublicFee(minter);\n      }\n    }, {\n      staleTime: staleTime,\n      enabled: !!minter\n    });\n    return fee;\n  }\n};\n\n_s(usePublicFee, \"9UH8dKw7WWnaZX6+UFqSnqyBLuU=\", false, function () {\n  return [useQuery, useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/usePublicFee.js"],"names":["useQuery","useApolloQuery","gql","getMinter","getPublicFee","defaults","usePublicFee","rpc","pollInterval","api","graphql","staleTime","data","minter","fee","enabled"],"mappings":";;AAAA;AACA,SAASA,QAAQ,IAAIC,cAArB,EAAqCC,GAArC,QAAgD,gBAAhD;AACA,SAASF,QAAT,QAAyB,aAAzB;AACA,SAASG,SAAT,EAAoBC,YAApB,QAAwC,oBAAxC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAsG;AAAA;;AAAA,MAArGC,GAAqG,uEAA/F,IAA+F;AAAA,MAAzFC,YAAyF,uEAA1EH,QAAQ,CAACI,GAAT,CAAaC,OAAb,CAAqBF,YAAqD;AAAA,MAAvCG,SAAuC,uEAA3BN,QAAQ,CAACI,GAAT,CAAaE,SAAc;;AAEjI,MAAI,CAACJ,GAAL,EAAU,CACT;AACA,GAFD,MAGK;AAEJ,UAAM;AAAEK,MAAAA,IAAI,EAAEC;AAAR,QAAmBb,QAAQ,CAAC,QAAD,EAAW,YAAY;AACvD,aAAO,MAAMG,SAAS,EAAtB;AACA,KAFgC,EAE9B;AACFQ,MAAAA,SAAS,EAAEA;AADT,KAF8B,CAAjC;AAOA,UAAMG,GAAG,GAAGd,QAAQ,CAAC,cAAD,EAAiB,YAAY;AAChD,UAAIa,MAAJ,EAAY;AACX,eAAO,MAAMT,YAAY,CAACS,MAAD,CAAzB;AACA;AACD,KAJmB,EAIjB;AACFF,MAAAA,SAAS,EAAEA,SADT;AAEFI,MAAAA,OAAO,EAAE,CAAC,CAACF;AAFT,KAJiB,CAApB;AAUA,WAAOC,GAAP;AACA;AAED,CA3BM;;GAAMR,Y;UAOcN,Q,EAObA,Q","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useQuery as useApolloQuery, gql } from '@apollo/client'\nimport { useQuery } from 'react-query'\nimport { getMinter, getPublicFee } from '../common/ethereum'\nimport defaults from '../common/defaults'\n\nexport const usePublicFee = (rpc = true, pollInterval = defaults.api.graphql.pollInterval, staleTime = defaults.api.staleTime) => {\n\n\tif (!rpc) {\n\t\t// GQL 2 DO\n\t}\n\telse {\n\n\t\tconst { data: minter } = useQuery('minter', async () => {\n\t\t\treturn await getMinter()\n\t\t}, {\n\t\t\tstaleTime: staleTime,\n\t\t},\n\t\t)\n\n\t\tconst fee = useQuery('getPublicFee', async () => {\n\t\t\tif (minter) {\n\t\t\t\treturn await getPublicFee(minter)\n\t\t\t}\n\t\t}, {\n\t\t\tstaleTime: staleTime,\n\t\t\tenabled: !!minter,\n\t\t},\n\t\t)\n\n\t\treturn fee\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}