{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport defaults from '../common/defaults';\nexport const useUniswapV2Price = function (pairAddress) {\n  _s();\n\n  let principalPrice = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let rpc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let pollInterval = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaults.api.graphql.pollInterval;\n\n  if (!rpc) {\n    const query = gql`\n\t\tquery {\n\t\t\tpairs (\n\t\t\t\twhere: {\n\t\t\t\t\tid: \"${String(pairAddress).toLowerCase()}\"\n\t\t\t\t}\n\t\t\t\t) {\n\t\t\t\t\ttoken0Price\n\t\t\t\t\ttoken1Price\n\t\t\t\t\t${principalPrice ? `\n\t\t\t\t\treserve0\n\t\t\t\t\treserve1\n\t\t\t\t\ttotalSupply\n\t\t\t\t\t` : ''}\n\t\t\t\t}\n\t\t}`;\n    const {\n      data,\n      error,\n      loading\n    } = useQuery(query, {\n      client: defaults.api.graphql.client.uniswapV2,\n      pollInterval: pollInterval\n    });\n\n    if (principalPrice) {\n      var _data$pairs, _data$pairs$, _data$pairs2, _data$pairs2$, _data$pairs3, _data$pairs3$, _data$pairs4, _data$pairs4$;\n\n      const tvl = Number((data === null || data === void 0 ? void 0 : (_data$pairs = data.pairs) === null || _data$pairs === void 0 ? void 0 : (_data$pairs$ = _data$pairs[0]) === null || _data$pairs$ === void 0 ? void 0 : _data$pairs$.reserve0) * (data === null || data === void 0 ? void 0 : (_data$pairs2 = data.pairs) === null || _data$pairs2 === void 0 ? void 0 : (_data$pairs2$ = _data$pairs2[0]) === null || _data$pairs2$ === void 0 ? void 0 : _data$pairs2$.token1Price)) + Number(data === null || data === void 0 ? void 0 : (_data$pairs3 = data.pairs) === null || _data$pairs3 === void 0 ? void 0 : (_data$pairs3$ = _data$pairs3[0]) === null || _data$pairs3$ === void 0 ? void 0 : _data$pairs3$.reserve1);\n      const price = Number(tvl / (data === null || data === void 0 ? void 0 : (_data$pairs4 = data.pairs) === null || _data$pairs4 === void 0 ? void 0 : (_data$pairs4$ = _data$pairs4[0]) === null || _data$pairs4$ === void 0 ? void 0 : _data$pairs4$.totalSupply));\n      return [price && tvl ? {\n        totalValueLocked: tvl,\n        principalPrice: price\n      } : undefined, loading, error];\n    }\n\n    return [data, loading, error];\n  } else {}\n};\n\n_s(useUniswapV2Price, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/augustin/vader-dapp/src/hooks/useUniswapV2Price.js"],"names":["useQuery","gql","defaults","useUniswapV2Price","pairAddress","principalPrice","rpc","pollInterval","api","graphql","query","String","toLowerCase","data","error","loading","client","uniswapV2","tvl","Number","pairs","reserve0","token1Price","reserve1","price","totalSupply","totalValueLocked","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,UAACC,WAAD,EAAwG;AAAA;;AAAA,MAA1FC,cAA0F,uEAAzE,KAAyE;AAAA,MAAlEC,GAAkE,uEAA5D,KAA4D;AAAA,MAArDC,YAAqD,uEAAtCL,QAAQ,CAACM,GAAT,CAAaC,OAAb,CAAqBF,YAAiB;;AAExI,MAAI,CAACD,GAAL,EAAU;AACT,UAAMI,KAAK,GAAGT,GAAI;AACpB;AACA;AACA;AACA,YAAYU,MAAM,CAACP,WAAD,CAAN,CAAoBQ,WAApB,EAAkC;AAC9C;AACA;AACA;AACA;AACA,OAAOP,cAAc,GAAI;AACzB;AACA;AACA;AACA,MAJqB,GAIZ,EAAG;AACZ;AACA,IAfE;AAiBA,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2Bf,QAAQ,CACxCU,KADwC,EAExC;AACCM,MAAAA,MAAM,EAAEd,QAAQ,CAACM,GAAT,CAAaC,OAAb,CAAqBO,MAArB,CAA4BC,SADrC;AAEEV,MAAAA,YAAY,EAAEA;AAFhB,KAFwC,CAAzC;;AAQA,QAAGF,cAAH,EAAmB;AAAA;;AAClB,YAAMa,GAAG,GAAGC,MAAM,CAAC,CAACN,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAEO,KAAP,gEAAC,YAAc,CAAd,CAAD,iDAAC,aAAkBC,QAAnB,KAAgCR,IAAhC,aAAgCA,IAAhC,uCAAgCA,IAAI,CAAEO,KAAtC,kEAAgC,aAAc,CAAd,CAAhC,kDAAgC,cAAkBE,WAAlD,CAAD,CAAN,GAAyEH,MAAM,CAACN,IAAD,aAACA,IAAD,uCAACA,IAAI,CAAEO,KAAP,kEAAC,aAAc,CAAd,CAAD,kDAAC,cAAkBG,QAAnB,CAA3F;AACA,YAAMC,KAAK,GAAGL,MAAM,CAAED,GAAD,IAASL,IAAT,aAASA,IAAT,uCAASA,IAAI,CAAEO,KAAf,kEAAS,aAAc,CAAd,CAAT,kDAAS,cAAkBK,WAA3B,CAAD,CAApB;AACA,aAAO,CAACD,KAAK,IAAIN,GAAT,GAAe;AACtBQ,QAAAA,gBAAgB,EAAER,GADI;AAEtBb,QAAAA,cAAc,EAAEmB;AAFM,OAAf,GAGJG,SAHG,EAGQZ,OAHR,EAGiBD,KAHjB,CAAP;AAIA;;AAED,WAAO,CAACD,IAAD,EAAOE,OAAP,EAAgBD,KAAhB,CAAP;AACA,GApCD,MAqCK,CAEJ;AAED,CA3CM;;GAAMX,iB;UAoBsBH,Q","sourcesContent":["import { useQuery, gql } from '@apollo/client'\nimport defaults from '../common/defaults'\n\nexport const useUniswapV2Price = (pairAddress, principalPrice = false, rpc = false, pollInterval = defaults.api.graphql.pollInterval) => {\n\n\tif (!rpc) {\n\t\tconst query = gql`\n\t\tquery {\n\t\t\tpairs (\n\t\t\t\twhere: {\n\t\t\t\t\tid: \"${String(pairAddress).toLowerCase()}\"\n\t\t\t\t}\n\t\t\t\t) {\n\t\t\t\t\ttoken0Price\n\t\t\t\t\ttoken1Price\n\t\t\t\t\t${principalPrice ? `\n\t\t\t\t\treserve0\n\t\t\t\t\treserve1\n\t\t\t\t\ttotalSupply\n\t\t\t\t\t` : ''}\n\t\t\t\t}\n\t\t}`\n\n\t\tconst { data, error, loading } = useQuery(\n\t\t\tquery,\n\t\t\t{\n\t\t\t\tclient: defaults.api.graphql.client.uniswapV2,\n   \t\tpollInterval: pollInterval,\n\t\t\t},\n\t\t)\n\n\t\tif(principalPrice) {\n\t\t\tconst tvl = Number((data?.pairs?.[0]?.reserve0) * (data?.pairs?.[0]?.token1Price)) + Number(data?.pairs?.[0]?.reserve1)\n\t\t\tconst price = Number((tvl) / (data?.pairs?.[0]?.totalSupply))\n\t\t\treturn [price && tvl ? {\n\t\t\t\ttotalValueLocked: tvl,\n\t\t\t\tprincipalPrice: price,\n\t\t\t} : undefined, loading, error]\n\t\t}\n\n\t\treturn [data, loading, error]\n\t}\n\telse {\n\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}